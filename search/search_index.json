{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started with TwinTrim","text":"<p>Welcome to the TwinTrim getting started guide! This document will walk you through the steps to get started with the project.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have met the following requirements:</p> <ul> <li>Python Installation: Make sure you have Python 3.6 or above installed on your system. You can download it from the official Python website.</li> <li>Git: Ensure you have Git installed to clone the repository. You can get it from the official Git website.</li> <li>GitHub Account: A GitHub account is required if you plan to contribute to the project.</li> </ul>"},{"location":"#installing-twintrim","title":"Installing TwinTrim","text":"<p>To install TwinTrim, follow these steps:</p> <ol> <li> <p>Clone the Repository: Clone the repository from GitHub to your local machine.</p> <p><code>bash git clone https://github.com/Kota-Karthik/twinTrim.git</code></p> </li> <li> <p>Navigate to the Project Directory: Change into the project directory.</p> <p><code>bash cd twinTrim</code></p> </li> <li> <p>Install Dependencies: Install the required dependencies using the following command. If you are using <code>poetry</code>, you can install dependencies with:</p> <p><code>bash poetry install</code></p> <p>Alternatively, if you are using <code>pip</code>, install the dependencies from <code>requirements.txt</code>:</p> <p><code>bash pip install -r requirements.txt</code></p> </li> </ol>"},{"location":"#running-twintrim","title":"Running TwinTrim","text":"<p>To run TwinTrim, follow these steps:</p> <ol> <li> <p>Navigate to the Project Directory (if not already there):</p> <p><code>bash cd twinTrim</code></p> </li> <li> <p>Run the Application: Start the application with the following command:</p> <p><code>bash python -m twinTrim.main &lt;directory&gt; [OPTIONS]</code></p> <p>Replace <code>&lt;directory&gt;</code> with the path to the directory you want to scan. You can add options such as <code>--all</code> to automatically remove duplicates or specify filters (e.g., <code>--min-size</code> or <code>--file-type</code>).</p> <p>The application will scan the directory and, based on your options, either prompt you to review the duplicates or automatically remove them.</p> </li> </ol>"},{"location":"#contributing-to-twintrim","title":"Contributing to TwinTrim","text":"<p>We welcome contributions! Follow these steps to contribute:</p> <ol> <li> <p>Fork the Repository: Fork the repository on GitHub from here.</p> </li> <li> <p>Clone Your Fork: Clone the forked repository to your local machine.</p> <p><code>bash git clone https://github.com/&lt;your-username&gt;/twinTrim.git</code></p> </li> <li> <p>Create a New Branch: Create a new branch to work on your changes.</p> <p><code>bash git checkout -b new-branch-name</code></p> </li> <li> <p>Make Changes: Make the necessary changes to the code.</p> </li> <li> <p>Commit Changes: Commit your changes with a descriptive message.</p> <p><code>bash git commit -m \"Descriptive commit message\"</code></p> </li> <li> <p>Push Changes: Push your changes to your fork on GitHub.</p> <p><code>bash git push origin new-branch-name</code></p> </li> <li> <p>Create a Pull Request: Go to the GitHub repository and create a pull request from your fork's branch to the main repository's <code>main</code> branch.</p> </li> </ol> <p>Your changes will be reviewed, and if everything looks good, they will be merged into the main project.</p>"},{"location":"#contact","title":"Contact","text":"<p>If you have any questions or need further assistance, feel free to reach out to Karthik Kota.</p>"},{"location":"Contributing/","title":"Contributing","text":"<p>Contributions are welcome! Whether you have ideas for improving the internal workings of TwinTrim, such as optimizing performance or refining algorithms, or you want to enhance the user interface of the CLI tool for a better user experience, your input is valuable. Please fork the repository and submit a pull request with your improvements or new features.</p> <p>Please refer to the CONTRIBUTING GUIDELINES for guidelines on how to contribute.</p>"},{"location":"Features/","title":"Features","text":"<ul> <li>Duplicate Detection: Scans directories to detect duplicate files based on file content rather than just filenames.</li> <li>Automatic or Manual Removal: Choose to handle duplicates automatically using the <code>--all</code> flag or manually select which files to delete.</li> <li>Customizable Filters: Set filters for minimum and maximum file sizes, file types, and specific filenames to exclude from the scan.</li> <li>Multi-Threaded Processing: Utilizes multi-threading to quickly scan and process large numbers of files concurrently.</li> <li>Deadlock Prevention: Implements locks to prevent deadlocks during multi-threaded operations, ensuring smooth and safe execution.</li> <li>User-Friendly Interface: Offers clear prompts and feedback via the command line, making the process straightforward and interactive.</li> </ul>"},{"location":"How-It-Works/","title":"How It Works","text":""},{"location":"How-It-Works/#core-components","title":"Core Components","text":"<ol> <li> <p>File Metadata Management: </p> <ul> <li>Uses <code>AllFileMetadata</code> and <code>FileMetadata</code> classes to manage file information, such as modification time and file paths.</li> <li>Maintains metadata in two dictionaries (<code>store</code> and <code>normalStore</code>) for handling different levels of duplicate management.</li> </ul> </li> <li> <p>File Hashing: </p> <ul> <li>Generates a unique hash for each file using MD5 to identify duplicates by content.</li> </ul> </li> <li> <p>File Filtering:</p> <ul> <li>The <code>FileFilter</code> class provides functionality to filter files based on size, type, and exclusions.</li> </ul> </li> <li> <p>Duplicate Handling:</p> <ul> <li>Duplicate files are identified by comparing their hashes.</li> <li>Based on file modification time, the latest file is retained, and older duplicates are removed.</li> </ul> </li> <li> <p>Deadlock Prevention:</p> <ul> <li>Uses locks within multi-threaded processes to ensure that resources are accessed safely, preventing deadlocks that could otherwise halt execution.</li> </ul> </li> </ol>"},{"location":"How-It-Works/#key-functions","title":"Key Functions","text":"<ul> <li>add_or_update_file: Adds new files to the metadata store or updates existing entries if a duplicate is detected.</li> <li>add_or_update_normal_file: Similar to <code>add_or_update_file</code> but manages duplicates in a separate store.</li> <li>handleAllFlag: Handles duplicate removal automatically without user intervention.</li> <li>find_duplicates: Finds duplicate files in the specified directory and prepares them for user review or automatic handling.</li> </ul>"},{"location":"License/","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p>"},{"location":"Usage/","title":"Usage","text":""},{"location":"Usage/#usage","title":"Usage","text":""},{"location":"Usage/#command-line-interface","title":"Command Line Interface","text":"<p>Run the script using the following command:</p> <pre><code>python -m twinTrim.main &lt;directory&gt; [OPTIONS]\n</code></pre>"},{"location":"Usage/#options","title":"Options","text":"<ul> <li><code>--all</code>: Automatically delete duplicates without asking for confirmation.</li> <li><code>--min-size</code>: Specify the minimum file size to include in the scan (e.g., <code>10kb</code>).</li> <li><code>--max-size</code>: Specify the maximum file size to include in the scan (e.g., <code>1gb</code>).</li> <li><code>--file-type</code>: Specify the file type to include (e.g., <code>.txt</code>, <code>.jpg</code>).</li> <li><code>--exclude</code>: Exclude specific files by name.</li> <li><code>--label-color</code>: Set the font color of the output label of the progress bar.</li> <li><code>--bar-color</code>: Set the color of the progress bar.</li> </ul>"},{"location":"Usage/#examples","title":"Examples","text":"<ol> <li> <p>Automatic Duplicate Removal:     <code>bash     python -m twinTrim.main /path/to/directory --all</code></p> </li> <li> <p>Manual Review and Removal:     <code>bash     python -m twinTrim.main /path/to/directory</code></p> </li> <li> <p>Filtered Scan by File Size and Type:     <code>bash     python -m twinTrim.main /path/to/directory --min-size \"50kb\" --max-size \"500mb\" --file-type \"txt\"</code></p> </li> </ol>"},{"location":"Usage/#dependencies","title":"Dependencies","text":"<ul> <li>Python 3.6+</li> <li><code>click</code> for command-line interaction</li> <li><code>tqdm</code> for progress bars</li> <li><code>concurrent.futures</code> for multi-threaded processing</li> <li><code>beaupy</code> for interactive selection</li> </ul>"},{"location":"Usage/#installation","title":"Installation","text":"<p>Clone the repository and install the required dependencies using Poetry:</p> <pre><code>git clone https://github.com/Kota-Karthik/twinTrim.git\ncd twinTrim\npoetry install\npoetry shell\n</code></pre> <p>If you haven't installed Poetry yet, you can do so by following the instructions on the Poetry website.</p>"}]}